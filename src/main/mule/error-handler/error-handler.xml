<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<flow name="error-mainErrorHandlerFlow" doc:id="d5caea74-9fd1-466e-8570-9457edde783e" >
		<flow-ref doc:name="error-handler-before-errorTypeFlow" doc:id="057343d3-76e0-4f98-8b2f-928c5768b5c0" name="error-handler-before-errorTypeFlow"/>
		<flow-ref doc:name="error-handler-route-errorTypeFlow" doc:id="2f402ef2-831f-4d8c-832c-7cf873595195" name="error-handler-route-errorTypeFlow"/>
		<flow-ref doc:name="error-handler-after-errorTypeFlow" doc:id="998cc004-7065-4589-af3d-6f65cad3c943" name="error-handler-after-errorTypeFlow"/>
	</flow>
	
	<sub-flow name="error-handler-before-errorTypeFlow" doc:id="62310d3c-7317-4699-9618-7925822972c9" >
		<json-logger:logger doc:name="Logger" doc:id="5a81f09e-36e3-4a70-ac7c-2f104f7723d8" config-ref="JSON_Logger_Config" message="In error-handler-before-errorTypeFlow" tracePoint="EXCEPTION">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(error) 
}]]]></json-logger:content>
		</json-logger:logger>
		<ee:transform doc:name="Set generic variables" doc:id="0da75b11-3197-4730-baa8-6a63019ac428">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="errorNamespace"><![CDATA[%dw 2.0
output application/java
---
error.errorType.namespace]]></ee:set-variable>
				<ee:set-variable variableName="errorIdentifier" ><![CDATA[%dw 2.0
output application/java
---
error.errorType.identifier]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="error-handler-route-errorTypeFlow" doc:id="2015bfff-e8b5-4862-9b99-7d19cb950afe" >
		<json-logger:logger doc:name="Debug Logger" doc:id="0dd16a02-8db4-4c6f-94d2-d5fa620bb84f" config-ref="JSON_Logger_Config" message="In error-handler-route-errorTypeFlow" tracePoint="EXCEPTION" priority="DEBUG"/>
		<ee:transform doc:name="Route to respective error handler based on error type" doc:id="dc10ac33-53e4-4947-b010-e288beec037e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
var namespace = {
				 'TECHNICAL':'ErrorHandlerTechnical',
				 'BUSINESS':'ErrorHandlerBusiness',
				 'HTTP':'ErrorHandlerHttp',
				 'FILE':'ErrorHandlerFile',
				 'JMS':'ErrorHandlerJms',
				 'WSC':'ErrorHandlerWs',
				 'APIKIT':'ErrorHandlerApiKit',
				 'REST-VALIDATOR':'ErrorHandlerRestValidator',
				 'DB':'ErrorHandlerDB'
				 }			 			 

var errorHandlerFlow = if (namespace[error.errorType.namespace] != null) namespace[error.errorType.namespace] else 'ErrorHandlerDefault' 
---
Mule::lookup(errorHandlerFlow, {})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="error-handler-after-errorTypeFlow" doc:id="14191836-1312-495d-9d16-81d2b291834f" >
		<json-logger:logger doc:name="Debug Logger" doc:id="8721dd31-aaec-48c7-a42e-b17526ccab77" config-ref="JSON_Logger_Config" message="In error-handler-after-errorTypeFlow" tracePoint="EXCEPTION" priority="DEBUG"/>
		<choice doc:name="Propagate error?" doc:id="ec89ab74-3d9c-4ec7-9f0e-097eba6d3d3b" >
			<when expression="error.errorMessage.payload.errorCode != null">
				<ee:transform doc:name="Transform Message" doc:id="b425dc74-8396-4cdb-b412-374e01f439e0" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
error.errorMessage.payload.errorCode]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-payload value="#[error.errorMessage.payload]" doc:name="Set Payload" doc:id="8dfbe8eb-2762-4fb7-90eb-385f6068006d" />
			</when>
			<otherwise >
				<ee:transform doc:name="Set httpStatus and errorMessage" doc:id="006f0bb2-e7e9-40bc-985f-fc9f40b15423">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
payload.httpStatus]]></ee:set-variable>
				<ee:set-variable variableName="errorMessage"><![CDATA[%dw 2.0
output application/java
---
payload.errorMessage]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="error-handler-override-errorFlow" doc:id="bff2f876-16e6-48bd-b3ba-6a527446246a" name="error-handler-override-errorFlow" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="error-handler-override-errorFlow" doc:id="c40b2724-552e-48ea-91d1-e196ed02a71c" >
		<json-logger:logger doc:name="Debug Logger" doc:id="6915401c-c8e4-47ad-b785-a28a53ccb575" config-ref="JSON_Logger_Config" message="In error-handler-extension-errorFlow" tracePoint="EXCEPTION" priority="DEBUG"/>
		<choice doc:name="Override Standard Final Error Response?" doc:id="a73f6d0f-baf2-40b1-894e-2116c2aefaa7" >
			<when expression="#[Mule::p('errors.override.response') == 'true']">
				<ee:transform doc:name="Override Standard Error Response" doc:id="7da8f887-a0f4-487c-afd5-8d4cd1c8373a" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
Mule::lookup('CustomErrorHandlerResponse', payload)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<json-logger:logger doc:name="Logger" doc:id="1648a2cb-fbb5-40a5-a00b-aba77eabc31b" config-ref="JSON_Logger_Config" message="Overriden error response"/>
			</when>			
			<otherwise>
				<ee:transform doc:name="Standard Final Error Response" doc:id="7430adac-1a62-4f2e-8617-cd4c797a4bcb">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---

{
	status: vars.httpStatus,
	layer: Mule::p('app.layer'),
	title: vars.errorMessage,
	detail: error.detailedDescription,
	description: error.description,
	errorType: error.errorType.identifier,
	correlationId: correlationId,	
	referenceId: uuid()
}
 ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<json-logger:logger doc:name="Logger" doc:id="478b9a8d-3f3b-45f5-911c-aa72cd437453" config-ref="JSON_Logger_Config" message="Default error log" tracePoint="EXCEPTION">
		</json-logger:logger>
				<ee:transform doc:name="Transform Message" doc:id="54e987c2-396b-41ff-8af5-9f5080339754" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
		status: vars.httpStatus,
		title:  vars.errorMessage default "System error",
		correlationId: correlationId,
		referenceId: payload.referenceId
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<ee:transform doc:name="FInal JSON response" doc:id="48396119-16e3-4444-ad19-5c6251a8ca25" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
